"use strict";(self.webpackChunkfuse_react_app=self.webpackChunkfuse_react_app||[]).push([[627],{627:(n,e,o)=>{o.r(e),o.d(e,{default:()=>h});var t=o(95529),a=o(76880),i=o(29610),s=o(8207),l=o(87274),r=o(95489),c=o(78298),d=o(83107),g=o(72047),p=o(15678);const h=function(n){const e=(0,d.wA)();return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(c.A,{variant:"h4",className:"mb-40 font-700",children:"FuseDialog"}),(0,p.jsxs)(c.A,{className:"mb-16",component:"p",children:[(0,p.jsx)("code",{children:"FuseDialog"})," is a simple dialog trigger for easily showing dialog messages via redux action. It should be located in the theme layouts."]}),(0,p.jsx)(c.A,{className:"text-20 mt-20 mb-10 font-700",variant:"h5",children:"Usage"}),(0,p.jsx)(c.A,{className:"mb-16",component:"p",children:"You can show dialog anywhere with dispatching the action openDialog, it is using Material-UI's dialog so you can pass the props in the object:"}),(0,p.jsx)(t.A,{component:"pre",className:"language-jsx",children:'\n                        <Button\n                            onClick={()=> dispatch(openDialog({\n                                children: (\n                                    <React.Fragment>\n                                        <DialogTitle id="alert-dialog-title">Use Google\'s location service?</DialogTitle>\n                                        <DialogContent>\n                                            <DialogContentText id="alert-dialog-description">\n                                                Let Google help apps determine location. This means sending anonymous location data to\n                                                Google, even when no apps are running.\n                                            </DialogContentText>\n                                        </DialogContent>\n                                        <DialogActions>\n                                            <Button onClick={()=> dispatch(closeDialog())} color="primary">\n                                                Disagree\n                                            </Button>\n                                            <Button onClick={()=> dispatch(closeDialog())} color="primary" autoFocus>\n                                                Agree\n                                            </Button>\n                                        </DialogActions>\n                                    </React.Fragment>\n                                     )\n                                 }))}\n                            variant="contained"\n                            color="secondary"\n                        >\n                            Open Dialog\n                        </Button>\n                        '}),(0,p.jsx)(c.A,{className:"text-20 mt-20 mb-10 font-700",variant:"h5",children:"Example"}),(0,p.jsx)(a.A,{onClick:()=>e((0,g.Dh)({children:(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(r.A,{id:"alert-dialog-title",children:"Use Google's location service?"}),(0,p.jsx)(s.A,{children:(0,p.jsx)(l.A,{id:"alert-dialog-description",children:"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running."})}),(0,p.jsxs)(i.A,{children:[(0,p.jsx)(a.A,{onClick:()=>e((0,g.zU)()),color:"primary",children:"Disagree"}),(0,p.jsx)(a.A,{onClick:()=>e((0,g.zU)()),color:"primary",autoFocus:!0,children:"Agree"})]})]})})),variant:"contained",color:"secondary",children:"Open Dialog"})]})}},87274:(n,e,o)=>{o.d(e,{A:()=>m});var t=o(98587),a=o(58168),i=o(88094),s=o(26140),l=o(91073),r=o(92443),c=o(78298),d=o(56302);function g(n){return(0,d.A)("MuiDialogContentText",n)}(0,o(11894).A)("MuiDialogContentText",["root"]);var p=o(15678);const h=["children"],u=(0,l.Ay)(c.A,{shouldForwardProp:n=>(0,l.ep)(n)||"classes"===n,name:"MuiDialogContentText",slot:"Root",overridesResolver:(n,e)=>e.root})({}),m=i.forwardRef((function(n,e){const o=(0,r.A)({props:n,name:"MuiDialogContentText"}),i=(0,t.A)(o,h),l=(n=>{const{classes:e}=n,o=(0,s.A)({root:["root"]},g,e);return(0,a.A)({},e,o)})(i);return(0,p.jsx)(u,(0,a.A)({component:"p",variant:"body1",color:"text.secondary",ref:e,ownerState:i},o,{classes:l}))}))}}]);