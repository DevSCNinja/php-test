"use strict";(self.webpackChunkfuse_react_app=self.webpackChunkfuse_react_app||[]).push([[2613],{47667:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});const o="import * as React from 'react';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nexport default function ColorToggleButton() {\n  const [alignment, setAlignment] = React.useState('web');\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  return (\n    <ToggleButtonGroup\n      color=\"primary\"\n      value={alignment}\n      exclusive\n      onChange={handleChange}\n    >\n      <ToggleButton value=\"web\">Web</ToggleButton>\n      <ToggleButton value=\"android\">Android</ToggleButton>\n      <ToggleButton value=\"ios\">iOS</ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n"},97697:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});const o="import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\nimport FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport Divider from '@mui/material/Divider';\nimport Paper from '@mui/material/Paper';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    margin: theme.spacing(0.5),\n    border: 0,\n    '&.Mui-disabled': {\n      border: 0,\n    },\n    '&:not(:first-of-type)': {\n      borderRadius: theme.shape.borderRadius,\n    },\n    '&:first-of-type': {\n      borderRadius: theme.shape.borderRadius,\n    },\n  },\n}));\n\nexport default function CustomizedDividers() {\n  const [alignment, setAlignment] = React.useState('left');\n  const [formats, setFormats] = React.useState(() => ['italic']);\n\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats);\n  };\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  return (\n    <div>\n      <Paper\n        elevation={0}\n        sx={{\n          display: 'flex',\n          border: (theme) => `1px solid ${theme.palette.divider}`,\n          flexWrap: 'wrap',\n        }}\n      >\n        <StyledToggleButtonGroup\n          size=\"small\"\n          value={alignment}\n          exclusive\n          onChange={handleAlignment}\n          aria-label=\"text alignment\"\n        >\n          <ToggleButton value=\"left\" aria-label=\"left aligned\">\n            <FormatAlignLeftIcon />\n          </ToggleButton>\n          <ToggleButton value=\"center\" aria-label=\"centered\">\n            <FormatAlignCenterIcon />\n          </ToggleButton>\n          <ToggleButton value=\"right\" aria-label=\"right aligned\">\n            <FormatAlignRightIcon />\n          </ToggleButton>\n          <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\n            <FormatAlignJustifyIcon />\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n        <Divider flexItem orientation=\"vertical\" sx={{ mx: 0.5, my: 1 }} />\n        <StyledToggleButtonGroup\n          size=\"small\"\n          value={formats}\n          onChange={handleFormat}\n          aria-label=\"text formatting\"\n        >\n          <ToggleButton value=\"bold\" aria-label=\"bold\">\n            <FormatBoldIcon />\n          </ToggleButton>\n          <ToggleButton value=\"italic\" aria-label=\"italic\">\n            <FormatItalicIcon />\n          </ToggleButton>\n          <ToggleButton value=\"underlined\" aria-label=\"underlined\">\n            <FormatUnderlinedIcon />\n          </ToggleButton>\n          <ToggleButton value=\"color\" aria-label=\"color\" disabled>\n            <FormatColorFillIcon />\n            <ArrowDropDownIcon />\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n      </Paper>\n    </div>\n  );\n}\n"},33645:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});const o="import * as React from 'react';\nimport CheckIcon from '@mui/icons-material/Check';\nimport ToggleButton from '@mui/material/ToggleButton';\n\nexport default function StandaloneToggleButton() {\n  const [selected, setSelected] = React.useState(false);\n\n  return (\n    <ToggleButton\n      value=\"check\"\n      selected={selected}\n      onChange={() => {\n        setSelected(!selected);\n      }}\n    >\n      <CheckIcon />\n    </ToggleButton>\n  );\n}\n"},58452:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});const o='import * as React from \'react\';\nimport FormatAlignLeftIcon from \'@mui/icons-material/FormatAlignLeft\';\nimport FormatAlignCenterIcon from \'@mui/icons-material/FormatAlignCenter\';\nimport FormatAlignRightIcon from \'@mui/icons-material/FormatAlignRight\';\nimport LaptopIcon from \'@mui/icons-material/Laptop\';\nimport TvIcon from \'@mui/icons-material/Tv\';\nimport PhoneAndroidIcon from \'@mui/icons-material/PhoneAndroid\';\nimport Stack from \'@mui/material/Stack\';\nimport ToggleButton from \'@mui/material/ToggleButton\';\nimport ToggleButtonGroup from \'@mui/material/ToggleButtonGroup\';\n\nexport default function ToggleButtonNotEmpty() {\n  const [alignment, setAlignment] = React.useState(\'left\');\n  const [devices, setDevices] = React.useState(() => [\'phone\']);\n\n  const handleAlignment = (event, newAlignment) => {\n    if (newAlignment !== null) {\n      setAlignment(newAlignment);\n    }\n  };\n\n  const handleDevices = (event, newDevices) => {\n    if (newDevices.length) {\n      setDevices(newDevices);\n    }\n  };\n\n  return (\n    <Stack direction="row" spacing={4}>\n      <ToggleButtonGroup\n        value={alignment}\n        exclusive\n        onChange={handleAlignment}\n        aria-label="text alignment"\n      >\n        <ToggleButton value="left" aria-label="left aligned">\n          <FormatAlignLeftIcon />\n        </ToggleButton>\n        <ToggleButton value="center" aria-label="centered">\n          <FormatAlignCenterIcon />\n        </ToggleButton>\n        <ToggleButton value="right" aria-label="right aligned">\n          <FormatAlignRightIcon />\n        </ToggleButton>\n      </ToggleButtonGroup>\n\n      <ToggleButtonGroup\n        value={devices}\n        onChange={handleDevices}\n        aria-label="device"\n      >\n        <ToggleButton value="laptop" aria-label="laptop">\n          <LaptopIcon />\n        </ToggleButton>\n        <ToggleButton value="tv" aria-label="tv">\n          <TvIcon />\n        </ToggleButton>\n        <ToggleButton value="phone" aria-label="phone">\n          <PhoneAndroidIcon />\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Stack>\n  );\n}\n'},84246:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});const o="import * as React from 'react';\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\nimport Box from '@mui/material/Box';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nexport default function ToggleButtonSizes() {\n  const [alignment, setAlignment] = React.useState('left');\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  const children = [\n    <ToggleButton value=\"left\" key=\"left\">\n      <FormatAlignLeftIcon />\n    </ToggleButton>,\n    <ToggleButton value=\"center\" key=\"center\">\n      <FormatAlignCenterIcon />\n    </ToggleButton>,\n    <ToggleButton value=\"right\" key=\"right\">\n      <FormatAlignRightIcon />\n    </ToggleButton>,\n    <ToggleButton value=\"justify\" key=\"justify\">\n      <FormatAlignJustifyIcon />\n    </ToggleButton>,\n  ];\n\n  const control = {\n    value: alignment,\n    onChange: handleChange,\n    exclusive: true,\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        // TODO Replace with Stack\n        '& > :not(style) + :not(style)': { mt: 2 },\n      }}\n    >\n      <ToggleButtonGroup size=\"small\" {...control}>\n        {children}\n      </ToggleButtonGroup>\n      <ToggleButtonGroup {...control}>{children}</ToggleButtonGroup>\n      <ToggleButtonGroup size=\"large\" {...control}>\n        {children}\n      </ToggleButtonGroup>\n    </Box>\n  );\n}\n"},53093:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});const o='import * as React from \'react\';\nimport FormatAlignLeftIcon from \'@mui/icons-material/FormatAlignLeft\';\nimport FormatAlignCenterIcon from \'@mui/icons-material/FormatAlignCenter\';\nimport FormatAlignRightIcon from \'@mui/icons-material/FormatAlignRight\';\nimport FormatAlignJustifyIcon from \'@mui/icons-material/FormatAlignJustify\';\nimport ToggleButton from \'@mui/material/ToggleButton\';\nimport ToggleButtonGroup from \'@mui/material/ToggleButtonGroup\';\n\nexport default function ToggleButtons() {\n  const [alignment, setAlignment] = React.useState(\'left\');\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  return (\n    <ToggleButtonGroup\n      value={alignment}\n      exclusive\n      onChange={handleAlignment}\n      aria-label="text alignment"\n    >\n      <ToggleButton value="left" aria-label="left aligned">\n        <FormatAlignLeftIcon />\n      </ToggleButton>\n      <ToggleButton value="center" aria-label="centered">\n        <FormatAlignCenterIcon />\n      </ToggleButton>\n      <ToggleButton value="right" aria-label="right aligned">\n        <FormatAlignRightIcon />\n      </ToggleButton>\n      <ToggleButton value="justify" aria-label="justified" disabled>\n        <FormatAlignJustifyIcon />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n'},16825:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});const o="import * as React from 'react';\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\nimport FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nexport default function ToggleButtonsMultiple() {\n  const [formats, setFormats] = React.useState(() => ['bold', 'italic']);\n\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats);\n  };\n\n  return (\n    <ToggleButtonGroup\n      value={formats}\n      onChange={handleFormat}\n      aria-label=\"text formatting\"\n    >\n      <ToggleButton value=\"bold\" aria-label=\"bold\">\n        <FormatBoldIcon />\n      </ToggleButton>\n      <ToggleButton value=\"italic\" aria-label=\"italic\">\n        <FormatItalicIcon />\n      </ToggleButton>\n      <ToggleButton value=\"underlined\" aria-label=\"underlined\">\n        <FormatUnderlinedIcon />\n      </ToggleButton>\n      <ToggleButton value=\"color\" aria-label=\"color\" disabled>\n        <FormatColorFillIcon />\n        <ArrowDropDownIcon />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n"},33807:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});const o="import * as React from 'react';\nimport ViewListIcon from '@mui/icons-material/ViewList';\nimport ViewModuleIcon from '@mui/icons-material/ViewModule';\nimport ViewQuiltIcon from '@mui/icons-material/ViewQuilt';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nexport default function VerticalToggleButtons() {\n  const [view, setView] = React.useState('list');\n\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n  };\n\n  return (\n    <ToggleButtonGroup\n      orientation=\"vertical\"\n      value={view}\n      exclusive\n      onChange={handleChange}\n    >\n      <ToggleButton value=\"list\" aria-label=\"list\">\n        <ViewListIcon />\n      </ToggleButton>\n      <ToggleButton value=\"module\" aria-label=\"module\">\n        <ViewModuleIcon />\n      </ToggleButton>\n      <ToggleButton value=\"quilt\" aria-label=\"quilt\">\n        <ViewQuiltIcon />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n"},21306:(e,n,t)=>{t.d(n,{A:()=>y});var o=t(95529),l=t(88124),a=t(87369),i=t(33358),r=t(96915),s=t(88094),c=t(89720),m=t(84178),u=t(83775),g=t(33351),d=t(90777),h=t(71739),p=t(33209),f=t(34057),x=t(91073),A=t(60209),v=t(15678);function b(e){const{children:n,document:t}=e,o=(0,f.A)();s.useEffect((()=>{t.body.dir=o.direction}),[t,o.direction]);const l=s.useMemo((()=>(0,d.A)({key:`iframe-demo-${o.direction}`,prepend:!0,container:t.head,stylisPlugins:"rtl"===o.direction?[g.A]:[]})),[t,o.direction]),a=s.useCallback((()=>t.defaultView),[t]);return(0,v.jsx)(p.StyleSheetManager,{target:t.head,stylisPlugins:"rtl"===o.direction?[g.A]:[],children:(0,v.jsxs)(h.C,{value:l,children:[(0,v.jsx)(A.A,{styles:()=>({html:{fontSize:"62.5%"}})}),s.cloneElement(n,{window:a})]})})}const j=(0,x.Ay)("iframe")((e=>{let{theme:n}=e;return{backgroundColor:n.palette.background.default,flexGrow:1,height:400,border:0,boxShadow:n.shadows[1]}}));function T(e){var n;const{children:t,name:o,...l}=e,a=`${o} demo`,i=s.useRef(null),[r,c]=s.useReducer((()=>!0),!1);s.useEffect((()=>{const e=i.current.contentDocument;null==e||"complete"!==e.readyState||r||c()}),[r]);const m=null===(n=i.current)||void 0===n?void 0:n.contentDocument;return(0,v.jsxs)(v.Fragment,{children:[(0,v.jsx)(j,{onLoad:c,ref:i,title:a,...l}),!1!==r?u.createPortal((0,v.jsx)(b,{document:m,children:t}),m.body):null]})}const B=s.memo(T);var w=t(98231);function F(e){const[n,t]=(0,s.useState)(e.currentTabIndex),{component:u,raw:g,iframe:d,className:h,name:p}=e;return(0,v.jsxs)(l.A,{className:(0,r.A)(h,"shadow"),sx:{backgroundColor:e=>(0,c.e$)(e.palette.background.paper,"light"===e.palette.mode?.01:.1)},children:[(0,v.jsx)(m.A,{sx:{backgroundColor:e=>(0,c.e$)(e.palette.background.paper,"light"===e.palette.mode?.02:.2)},children:(0,v.jsxs)(i.A,{classes:{root:"border-b-1",flexContainer:"justify-end"},value:n,onChange:function(e,n){t(n)},textColor:"secondary",indicatorColor:"secondary",children:[u&&(0,v.jsx)(a.A,{classes:{root:"min-w-64"},icon:(0,v.jsx)(w.A,{children:"heroicons-outline:eye"})}),g&&(0,v.jsx)(a.A,{classes:{root:"min-w-64"},icon:(0,v.jsx)(w.A,{children:"heroicons-outline:code"})})]})}),(0,v.jsxs)("div",{className:"flex justify-center max-w-full relative",children:[(0,v.jsx)("div",{className:0===n?"flex flex-1 max-w-full":"hidden",children:u&&(d?(0,v.jsx)(B,{name:p,children:(0,v.jsx)(u,{})}):(0,v.jsx)("div",{className:"p-24 flex flex-1 justify-center max-w-full",children:(0,v.jsx)(u,{})}))}),(0,v.jsx)("div",{className:1===n?"flex flex-1":"hidden",children:g&&(0,v.jsx)("div",{className:"flex flex-1",children:(0,v.jsx)(o.A,{component:"pre",className:"language-javascript w-full",sx:{borderRadius:"0!important"},children:g.default})})})]})]})}F.defaultProps={name:"",currentTabIndex:0};const y=F},27628:(e,n,t)=>{t.d(n,{A:()=>r});var o=t(88094),l=t(41725),a=t(10236),i=t(15678);function r(){const[e,n]=o.useState("web");return(0,i.jsxs)(a.A,{color:"primary",value:e,exclusive:!0,onChange:(e,t)=>{n(t)},children:[(0,i.jsx)(l.A,{value:"web",children:"Web"}),(0,i.jsx)(l.A,{value:"android",children:"Android"}),(0,i.jsx)(l.A,{value:"ios",children:"iOS"})]})}},65024:(e,n,t)=>{t.d(n,{A:()=>b});var o=t(88094),l=t(91073),a=t(48646),i=t(41438),r=t(71729),s=t(12179),c=t(70959),m=t(21160),u=t(42604),g=t(67088),d=t(98263),h=t(46521),p=t(26246),f=t(41725),x=t(10236),A=t(15678);const v=(0,l.Ay)(x.A)((e=>{let{theme:n}=e;return{"& .MuiToggleButtonGroup-grouped":{margin:n.spacing(.5),border:0,"&.Mui-disabled":{border:0},"&:not(:first-of-type)":{borderRadius:n.shape.borderRadius},"&:first-of-type":{borderRadius:n.shape.borderRadius}}}}));function b(){const[e,n]=o.useState("left"),[t,l]=o.useState((()=>["italic"]));return(0,A.jsx)("div",{children:(0,A.jsxs)(p.A,{elevation:0,sx:{display:"flex",border:e=>`1px solid ${e.palette.divider}`,flexWrap:"wrap"},children:[(0,A.jsxs)(v,{size:"small",value:e,exclusive:!0,onChange:(e,t)=>{n(t)},"aria-label":"text alignment",children:[(0,A.jsx)(f.A,{value:"left","aria-label":"left aligned",children:(0,A.jsx)(a.A,{})}),(0,A.jsx)(f.A,{value:"center","aria-label":"centered",children:(0,A.jsx)(i.A,{})}),(0,A.jsx)(f.A,{value:"right","aria-label":"right aligned",children:(0,A.jsx)(r.A,{})}),(0,A.jsx)(f.A,{value:"justify","aria-label":"justified",disabled:!0,children:(0,A.jsx)(s.A,{})})]}),(0,A.jsx)(h.A,{flexItem:!0,orientation:"vertical",sx:{mx:.5,my:1}}),(0,A.jsxs)(v,{size:"small",value:t,onChange:(e,n)=>{l(n)},"aria-label":"text formatting",children:[(0,A.jsx)(f.A,{value:"bold","aria-label":"bold",children:(0,A.jsx)(c.A,{})}),(0,A.jsx)(f.A,{value:"italic","aria-label":"italic",children:(0,A.jsx)(m.A,{})}),(0,A.jsx)(f.A,{value:"underlined","aria-label":"underlined",children:(0,A.jsx)(u.A,{})}),(0,A.jsxs)(f.A,{value:"color","aria-label":"color",disabled:!0,children:[(0,A.jsx)(g.A,{}),(0,A.jsx)(d.A,{})]})]})]})})}},68428:(e,n,t)=>{t.d(n,{A:()=>r});var o=t(88094),l=t(96347),a=t(41725),i=t(15678);function r(){const[e,n]=o.useState(!1);return(0,i.jsx)(a.A,{value:"check",selected:e,onChange:()=>{n(!e)},children:(0,i.jsx)(l.A,{})})}},30729:(e,n,t)=>{t.d(n,{A:()=>h});var o=t(88094),l=t(48646),a=t(41438),i=t(71729),r=t(9119),s=t(59437),c=t(64452),m=t(69825),u=t(41725),g=t(10236),d=t(15678);function h(){const[e,n]=o.useState("left"),[t,h]=o.useState((()=>["phone"]));return(0,d.jsxs)(m.A,{direction:"row",spacing:4,children:[(0,d.jsxs)(g.A,{value:e,exclusive:!0,onChange:(e,t)=>{null!==t&&n(t)},"aria-label":"text alignment",children:[(0,d.jsx)(u.A,{value:"left","aria-label":"left aligned",children:(0,d.jsx)(l.A,{})}),(0,d.jsx)(u.A,{value:"center","aria-label":"centered",children:(0,d.jsx)(a.A,{})}),(0,d.jsx)(u.A,{value:"right","aria-label":"right aligned",children:(0,d.jsx)(i.A,{})})]}),(0,d.jsxs)(g.A,{value:t,onChange:(e,n)=>{n.length&&h(n)},"aria-label":"device",children:[(0,d.jsx)(u.A,{value:"laptop","aria-label":"laptop",children:(0,d.jsx)(r.A,{})}),(0,d.jsx)(u.A,{value:"tv","aria-label":"tv",children:(0,d.jsx)(s.A,{})}),(0,d.jsx)(u.A,{value:"phone","aria-label":"phone",children:(0,d.jsx)(c.A,{})})]})]})}},99101:(e,n,t)=>{t.d(n,{A:()=>g});var o=t(88094),l=t(48646),a=t(41438),i=t(71729),r=t(12179),s=t(84178),c=t(41725),m=t(10236),u=t(15678);function g(){const[e,n]=o.useState("left"),t=[(0,u.jsx)(c.A,{value:"left",children:(0,u.jsx)(l.A,{})},"left"),(0,u.jsx)(c.A,{value:"center",children:(0,u.jsx)(a.A,{})},"center"),(0,u.jsx)(c.A,{value:"right",children:(0,u.jsx)(i.A,{})},"right"),(0,u.jsx)(c.A,{value:"justify",children:(0,u.jsx)(r.A,{})},"justify")],g={value:e,onChange:(e,t)=>{n(t)},exclusive:!0};return(0,u.jsxs)(s.A,{sx:{display:"flex",flexDirection:"column",alignItems:"center","& > :not(style) + :not(style)":{mt:2}},children:[(0,u.jsx)(m.A,{size:"small",...g,children:t}),(0,u.jsx)(m.A,{...g,children:t}),(0,u.jsx)(m.A,{size:"large",...g,children:t})]})}},83374:(e,n,t)=>{t.d(n,{A:()=>u});var o=t(88094),l=t(48646),a=t(41438),i=t(71729),r=t(12179),s=t(41725),c=t(10236),m=t(15678);function u(){const[e,n]=o.useState("left");return(0,m.jsxs)(c.A,{value:e,exclusive:!0,onChange:(e,t)=>{n(t)},"aria-label":"text alignment",children:[(0,m.jsx)(s.A,{value:"left","aria-label":"left aligned",children:(0,m.jsx)(l.A,{})}),(0,m.jsx)(s.A,{value:"center","aria-label":"centered",children:(0,m.jsx)(a.A,{})}),(0,m.jsx)(s.A,{value:"right","aria-label":"right aligned",children:(0,m.jsx)(i.A,{})}),(0,m.jsx)(s.A,{value:"justify","aria-label":"justified",disabled:!0,children:(0,m.jsx)(r.A,{})})]})}},66322:(e,n,t)=>{t.d(n,{A:()=>g});var o=t(88094),l=t(70959),a=t(21160),i=t(42604),r=t(67088),s=t(98263),c=t(41725),m=t(10236),u=t(15678);function g(){const[e,n]=o.useState((()=>["bold","italic"]));return(0,u.jsxs)(m.A,{value:e,onChange:(e,t)=>{n(t)},"aria-label":"text formatting",children:[(0,u.jsx)(c.A,{value:"bold","aria-label":"bold",children:(0,u.jsx)(l.A,{})}),(0,u.jsx)(c.A,{value:"italic","aria-label":"italic",children:(0,u.jsx)(a.A,{})}),(0,u.jsx)(c.A,{value:"underlined","aria-label":"underlined",children:(0,u.jsx)(i.A,{})}),(0,u.jsxs)(c.A,{value:"color","aria-label":"color",disabled:!0,children:[(0,u.jsx)(r.A,{}),(0,u.jsx)(s.A,{})]})]})}},61092:(e,n,t)=>{t.d(n,{A:()=>m});var o=t(88094),l=t(95122),a=t(1446),i=t(57617),r=t(41725),s=t(10236),c=t(15678);function m(){const[e,n]=o.useState("list");return(0,c.jsxs)(s.A,{orientation:"vertical",value:e,exclusive:!0,onChange:(e,t)=>{n(t)},children:[(0,c.jsx)(r.A,{value:"list","aria-label":"list",children:(0,c.jsx)(l.A,{})}),(0,c.jsx)(r.A,{value:"module","aria-label":"module",children:(0,c.jsx)(a.A,{})}),(0,c.jsx)(r.A,{value:"quilt","aria-label":"quilt",children:(0,c.jsx)(i.A,{})})]})}},82613:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});var o=t(21306),l=t(95529),a=t(98231),i=t(76880),r=t(78298),s=t(15678);const c=function(e){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{className:"flex flex-1 grow-0 items-center justify-end",children:(0,s.jsx)(i.A,{className:"normal-case",variant:"contained",color:"secondary",component:"a",href:"https://mui.com/components/toggle-button",target:"_blank",role:"button",startIcon:(0,s.jsx)(a.A,{children:"heroicons-outline:external-link"}),children:"Reference"})}),(0,s.jsx)(r.A,{className:"text-40 my-16 font-700",component:"h1",children:"Toggle button"}),(0,s.jsx)(r.A,{className:"description",children:"Toggle buttons can be used to group related options."}),(0,s.jsxs)(r.A,{className:"mb-40",component:"div",children:["To emphasize groups of related Toggle buttons, a group should share a common container. The"," ",(0,s.jsx)("code",{children:"ToggleButtonGroup"})," controls the selected state of its child buttons when given its own ",(0,s.jsx)("code",{children:"value"})," prop."]}),(0,s.jsx)(r.A,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Exclusive selection"}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:"With exclusive selection, selecting one option deselects any other."}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:"In this example, text justification toggle buttons present options for left, center, right, and fully justified text (disabled), with only one item available for selection at a time."}),(0,s.jsxs)(r.A,{className:"mb-40",component:"div",children:[(0,s.jsx)("strong",{children:"Note"}),": Exclusive selection does not enforce that a button must be active. For that effect see ",(0,s.jsx)("a",{href:"#enforce-value-set",children:"enforce value set"}),"."]}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:(0,s.jsx)(o.A,{name:"ToggleButtons.js",className:"my-24",iframe:!1,component:t(83374).A,raw:t(53093)})}),(0,s.jsx)(r.A,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Multiple selection"}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:"Multiple selection allows for logically-grouped options, like bold, italic, and underline, to have multiple options selected."}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:(0,s.jsx)(o.A,{name:"ToggleButtonsMultiple.js",className:"my-24",iframe:!1,component:t(66322).A,raw:t(16825)})}),(0,s.jsx)(r.A,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Size"}),(0,s.jsxs)(r.A,{className:"mb-40",component:"div",children:["For larger or smaller buttons, use the ",(0,s.jsx)("code",{children:"size"})," prop."]}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:(0,s.jsx)(o.A,{name:"ToggleButtonSizes.js",className:"my-24",iframe:!1,component:t(99101).A,raw:t(84246)})}),(0,s.jsx)(r.A,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Color"}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:(0,s.jsx)(o.A,{name:"ColorToggleButton.js",className:"my-24",iframe:!1,component:t(27628).A,raw:t(47667)})}),(0,s.jsx)(r.A,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Vertical buttons"}),(0,s.jsxs)(r.A,{className:"mb-40",component:"div",children:["The buttons can be stacked vertically with the ",(0,s.jsx)("code",{children:"orientation"}),' prop set to "vertical".']}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:(0,s.jsx)(o.A,{name:"VerticalToggleButtons.js",className:"my-24",iframe:!1,component:t(61092).A,raw:t(33807)})}),(0,s.jsx)(r.A,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Enforce value set"}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:"If you want to enforce that at least one button must be active, you can adapt your handleChange function."}),(0,s.jsx)(l.A,{component:"pre",className:"language-jsx",children:" \nconst handleAlignment = (event, newAlignment) => {\n  if (newAlignment !== null) {\n    setAlignment(newAlignment);\n  }\n};\n\nconst handleDevices = (event, newDevices) => {\n  if (newDevices.length) {\n    setDevices(newDevices);\n  }\n};\n"}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:(0,s.jsx)(o.A,{name:"ToggleButtonNotEmpty.js",className:"my-24",iframe:!1,component:t(30729).A,raw:t(58452)})}),(0,s.jsx)(r.A,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Standalone toggle button"}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:(0,s.jsx)(o.A,{name:"StandaloneToggleButton.js",className:"my-24",iframe:!1,component:t(68428).A,raw:t(33645)})}),(0,s.jsx)(r.A,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Customization"}),(0,s.jsxs)(r.A,{className:"mb-40",component:"div",children:["Here is an example of customizing the component. You can learn more about this in the"," ",(0,s.jsx)("a",{href:"/material-ui/customization/how-to-customize/",children:"overrides documentation page"}),"."]}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:(0,s.jsx)(o.A,{name:"CustomizedDividers.js",className:"my-24",iframe:!1,component:t(65024).A,raw:t(97697)})}),(0,s.jsx)(r.A,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Accessibility"}),(0,s.jsx)(r.A,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"ARIA"}),(0,s.jsxs)("ul",{children:[(0,s.jsxs)("li",{children:["ToggleButtonGroup has ",(0,s.jsx)("code",{children:'role="group"'}),". You should provide an accessible label with ",(0,s.jsx)("code",{children:'aria-label="label"'}),", ",(0,s.jsx)("code",{children:'aria-labelledby="id"'})," or"," ",(0,s.jsx)("code",{children:"<label>"}),"."]}),(0,s.jsxs)("li",{children:["ToggleButton sets ",(0,s.jsx)("code",{children:'aria-pressed="<bool>"'})," according to the button state. You should label each button with ",(0,s.jsx)("code",{children:"aria-label"}),"."]})]}),(0,s.jsx)(r.A,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Keyboard"}),(0,s.jsx)(r.A,{className:"mb-40",component:"div",children:"At present, toggle buttons are in DOM order. Navigate between them with the tab key. The button behavior follows standard keyboard semantics."})]})}}}]);